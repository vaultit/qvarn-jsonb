#!/bin/bash
# Copyright (C) 2017  Lars Wirzenius
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


set -eu

title()
{
    printf "\n"
    echo "$@"
    n=77
    for i in $(seq $n)
    do
        printf "%s" -
    done
    printf '\n'
}


most_yarns()
{
    find yarns -name '*.yarn' \
         ! -name '*-access-log.yarn' \
         ! -name '*-migration.yarn' \
         ! -name '*-local.yarn' \
         ! -name '*-remote.yarn' |
        sort
}


run_yarns()
{
    env2/bin/yarn $(most_yarns) \
         -s yarns/lib.py --shell $PWD/env2/bin/python --shell-arg '' --cd-datadir "$@" --env=PATH=$PWD/env/bin:$PATH
}


url=''
unit_tests=yes
style=yes
yarns=yes

if [ "$#" -gt 0 ]
then
    case "$1" in
        unit)
            unit_tests=yes
            style=yes
            yarns=no
            shift 1
            ;;
        remote)
            url="$2"
            unit_tests=no
            style=no
            yarns=yes
            shift 2
            ;;
        yarns)
            unit_tests=no
            style=no
            yarns=yes
            shift 1
            ;;
        *)
            echo "WAT?" 1>&2
            exit 1
    esac
fi


if [ "$unit_tests" = yes ]
then
    title "Unit tests"
    env/bin/python -m CoverageTestRunner --ignore-missing-from=without-tests \
            qvarn qvarnutils
fi


if [ "$style" = yes ]
then
    title "Code style"
    env/bin/pycodestyle qvarn qvarnutils qvarn-copy qvarn-dump qvarn-stats qvarn-access

    title "Pylint3"
    env/bin/pylint -j0 --rcfile pylint.conf \
            qvarn qvarnutils qvarn-copy qvarn-dump qvarn-stats qvarn-access

    title "Pylint (yarns/*.py)"
    env2/bin/pylint -j0 --rcfile pylint.conf \
           -d wildcard-import,unused-wildcard-import,locally-disabled yarns/*.py
fi


if [ "$yarns" = yes ]
then
    title "Yarns"

    if [ "${url:-no}" = no ]
    then
        run_yarns yarns/900-local.yarn "$@"
    else
        conf="$HOME/.config/qvarn/createtoken.conf"
        run_yarns yarns/900-remote.yarn \
                  --env "QVARN_CREATETOKEN_CONF=$conf" --env "QVARN_URL=$url" "$@"
   fi
fi
