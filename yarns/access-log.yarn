---
title: qvarn-jsonb integration tests
author:
- Lars Wirzenius / QvarnLabs Ab
- Ivan Dolgov / QvarnLabs Ab
date: work in progress
...


# Qvarn access log

A test scenario for access log.

First, we set up a couple of test users (A, B) and a test client, which
corresponds to the partner system.

    SCENARIO access is logged

    GIVEN test client has id CLIENT
    AND a running access log Qvarn instance
    AND users A and B who can fully access person resources
    AND user A has person resource A_ID
    AND user B has person resource B_ID

A creates a person resource, whose access log entries we will look at.

    WHEN user A creates a person resource
    THEN resource id is ID
    AND revision is REV

There should now be exactly one access log entry for the newly created person.

    AND access log contains only one entry
    AND access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": "${REV}",
    ...     "operation": "POST",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${A_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": null
    ... }

Now B looks at the same person resource. That should be logged.

    WHEN user B requests GET /persons/${ID}, with header
    ... Qvarn-Why: important
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": "${REV}",
    ...     "operation": "GET",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${B_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": "important"
    ... }

When B searches for that person, that should be logged too, even if
the search result includes only a resource id.

    WHEN user B requests GET /persons/search/exact/id/${ID}, with header
    ... Qvarn-Why: searching
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": null,
    ...     "operation": "SEARCH",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${B_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": "searching"
    ... }

When B searches lists persons, that should be logged too as well.

    WHEN user B requests GET /persons, with header
    ... Qvarn-Why: listing
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": null,
    ...     "operation": "GET",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${B_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": "listing"
    ... }

User A updates the person resource.

    WHEN user A updates /persons/${ID} without changing it
    THEN revision is REV
    AND access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": "${REV}",
    ...     "operation": "PUT",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${A_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": null
    ... }

An organization accesses the resource.

    WHEN test client requests GET /persons/${ID}, with header
    ... Qvarn-Why: secret
    ... Qvarn-Access-By: Org Nokia
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": "${REV}",
    ...     "operation": "GET",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         },
    ...         {
    ...             "accessor_id": "Nokia",
    ...             "accessor_type": "org"
    ...         }
    ...     ],
    ...     "why": "secret"
    ... }

A partner system accesses the resource.

    WHEN test client requests GET /persons/${ID}, with header
    ... Qvarn-Why: secret
    ... Qvarn-Access-By: Other dentarthurdent
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": "${REV}",
    ...     "operation": "GET",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         },
    ...         {
    ...             "accessor_id": "dentarthurdent",
    ...             "accessor_type": "other"
    ...         }
    ...     ],
    ...     "why": "secret"
    ... }

If A deletes that person resource, that should be logged.

    WHEN user A deletes /persons/${ID}
    THEN access log contains entry
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "${ID}",
    ...     "resource_revision": null,
    ...     "operation": "DELETE",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "${A_ID}",
    ...             "accessor_type": "person"
    ...         },
    ...         {
    ...             "accessor_id": "${CLIENT}",
    ...             "accessor_type": "client"
    ...         }
    ...     ],
    ...     "why": null
    ... }

Access log can be listed, but not altered externally.

    WHEN access log can be listed
    AND there is an entry ACCESS in access log
    THEN access log entry cannot be added, with body
    ... {
    ...     "type": "access",
    ...     "resource_type": "person",
    ...     "resource_id": "fake",
    ...     "resource_revision": "fake",
    ...     "operation": "GET",
    ...     "accessors": [
    ...         {
    ...             "accessor_id": "fake",
    ...             "accessor_type": "person"
    ...         }
    ...     ],
    ...     "why": "faking"
    ... }
    AND access log entry ACCESS cannot be updated

Access log can be cleaned up with access log management tool `qvarn-access`.
The tool currently supports only deletion of old access log entries.

    WHEN new access log entries are generated
    AND user deletes old entries with access log tool
    THEN no old access log entries are found

    FINALLY access log Qvarn is stopped
